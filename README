how do we run the code in our project?
go run main.go -> complies and executes
go build -> just compile -> main.exe

what does 'package main' mean?
package = .go files. Package name at the beginning of code.
package main is for executable package.
Any other name is a reusable or library
package main should have func main()

what does 'import "fmt"' mean?
access to code in "fmt" package - part of standard library - format, I/O, print, scan
"math", "encoding", "io", "crypto", etc..
https://pkg.go.dev/std

what is func?
func - function
main package should have main func, which runs automatically

variable name string = "string"
same as var cards string
:= only when declaring new variable

array - fixed. Same datatype
slice - array that can grown and shrink

var = []datatype{}

for index, current item := range slice {}

type name []string
Functions with a Receiver

func (d deck) print() {}
func RECEIVER(var our-type) func-name() {} - just the receiver is the extra part than normal func
card.print() - any variable of type deck gets access to print method
d - copy of deck. thats why it is used in "range"
deck - any var of type deck gets access to this method
receiver = this/self keyword of other languages

slice is indexed from 0
slice[start_index_Including : up_to_Not_including] - fruits[0:2], fruits[:3]

multiple return values: func name() (type, type) {}
var1, va2 := func()

func WriteFile(filename string, data []byte, perm os.FileMode) error
convert "deck" to(type conversion) []byte. []byte slice is basically a string
deck -> []string -> string -> []byte
[]byte(string) - every element on it is an ASCII value

strings.Join(slice, "separator")
strings.Split(string, "separator")

func ReadFile(filename string) ([]byte, error)

os.Exit(1)